# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY {
#    globalAuthRule: AuthRule = { allow: public }
# } # FOR TESTING ONLY!

type Profile
   @model
   @auth(
      rules: [
         { allow: groups, groups: ["admin"] }
         { allow: owner, ownerField: "id", operations: [update] }
         { allow: public, operations: [read] }
         { allow: private, operations: [read] }
      ]
   ) {
   id: ID!
   username: String!
   email: String!
   posts: [Post] @hasMany(indexName: "postsByProfile", fields: ["id"])
   comments: [Comment] @hasMany(indexName: "commentsByProfile", fields: ["id"])
}

type Post
   @model
   @searchable
   @auth(
      rules: [
         { allow: groups, groups: ["admin"] }
         { allow: owner }
         { allow: public, operations: [read] }
         { allow: private, operations: [read] }
      ]
   ) {
   id: ID!
   owner: ID @index(name: "postsByProfile", queryField: "postsByProfile", sortKeyFields: "title")
   title: String!
   createdAt: String!
   category: String!
   description: String
   image: String!
   author: Profile @belongsTo(fields: ["owner"])
   comments: [Comment] @hasMany(indexName: "commentsByPost", fields: ["id"])
}

type Comment
   @model
   @auth(
      rules: [
         { allow: groups, groups: ["admin"] }
         { allow: owner }
         { allow: public, operations: [read] }
         { allow: private, operations: [read] }
      ]
   ) {
   id: ID!
   postId: ID!
      @index(name: "commentsByPost", queryField: "commentsByPost", sortKeyFields: "content")
   owner: ID
      @index(name: "commentsByProfile", queryField: "commentsByProfile", sortKeyFields: "content")
   by: Profile @belongsTo(fields: ["owner"])
   content: String!
   post: Post @belongsTo(fields: ["postId"])
}
